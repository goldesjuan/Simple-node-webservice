// Generated by CoffeeScript 1.9.2
(function() {
  var DbHelper, async, dbHelper, express, mongo, router, util;

  express = require('express');

  async = require('async');

  util = require('util');

  mongo = require('mongoskin');

  router = express.Router();


  /*
   * Database helper class
   */

  DbHelper = (function() {
    function DbHelper(mongo) {
      this.db = mongo.db("mongodb://localhost:27017/nodetest2", {
        native_parser: true
      });
    }

    DbHelper.prototype.getCollection = function(collectionName, callback) {
      this.db.collection(collectionName).find().toArray(function(error, result) {
        if (error != null) {
          console.log("Error finding items of collection " + collectionName + " : " + (util.inspect(error)));
          return callback(error);
        }
        return callback(null, result);
      });
    };

    DbHelper.prototype.insertUser = function(user, finalCallback) {
      var checkDuplicates, collection, createUser;
      collection = this.db.collection('userlist');
      async.waterfall([
        checkDuplicates = function(callback) {
          collection.findOne({
            'username': user.username
          }, function(error, object) {
            if (error != null) {
              return callback(error);
            }
            if (object != null) {
              return callback(null, true);
            }
            return callback(null, false);
          });
        }, createUser = function(alreadyExists, callback) {
          if (alreadyExists) {
            return callback(null, 'Ok');
          }
          collection.insert(user, function(error, result) {
            if (error != null) {
              return callback(error);
            } else {
              return callback(null, 'Ok');
            }
          });
        }
      ], function(error, result) {
        if (error != null) {
          return finalCallback("Error inserting user to collection : " + (util.inspect(error)));
        }
        return finalCallback(null, result);
      });
    };

    DbHelper.prototype.deleteUser = function(collectionName, userId, callback) {
      this.db.collection(collectionName).removeById(userId, function(error, result) {
        if (error != null) {
          return callback(error);
        } else {
          return callback(null, 'Ok');
        }
      });
    };

    return DbHelper;

  })();

  dbHelper = new DbHelper(mongo);


  /*
   * GET userlist.
   */

  router.get('/userlist', function(req, res) {
    dbHelper.getCollection('userlist', function(error, result) {
      if (error != null) {
        console.log('#{util.inspect error}');
        res.status(500).send('Error finding users');
      } else {
        res.json(result);
      }
    });
  });


  /*
   * POST to adduser.
   */

  router.post('/adduser', function(req, res) {
    dbHelper.insertUser(req.body, function(error, result) {
      if (error != null) {
        console.log('Error inserting object in collection userlist : #{util.inspect error}');
        res.status(500).send('Error inserting user');
      } else {
        res.status(200).send('Ok');
      }
    });
  });


  /*
   * DELETE to deleteuser.
   */

  router["delete"]('/deleteuser/:id', function(req, res) {
    var userToDelete;
    userToDelete = req.params.id;
    dbHelper.deleteUser('userlist', userToDelete, function(error, result) {
      if (error != null) {
        console.log('Error deleting user : #{util.inspect error}');
        res.status(500).send('Error deleting user');
      } else {
        res.status(200).send('Ok');
      }
    });
  });

  module.exports = router;

}).call(this);
